// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum AdminRole {
  SUPER_ADMIN
  THEATHER_ADMIN
  ADMIN
}

model Admin {
  adminId   Int      @id @default(autoincrement())
  username  String   @unique
  password  String
  role      AdminRole   
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  userId    Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String
  theaters  Theaters[]
  seats     Seats[]
  tickets   Tickets[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Theaters {
  theatherId        Int      @id @default(autoincrement())
  name              String
  location          String
  movies            Movies[]
  users             User[]
  seats             Seats[]
}

model Seats {
  seatId        Int      @id @default(autoincrement())
  seatNumber    String
  seatType      String
  theaterID     Int
  theater       Theaters @relation(fields: [theaterID], references: [theatherId])
  users         User[]
}

model Movies {
  movieId           Int           @id @default(autoincrement())
  title             String
  description       String
  duration          Int
  releaseDate       DateTime
  schedules         MovieSchedules[]
  theaters          Theaters[]
}

model MovieSchedules {
  scheduleId        Int      @id @default(autoincrement())
  startTime         DateTime
  endTime           DateTime
  movieID           Int
  movie             Movies   @relation(fields: [movieID], references: [movieId])
  tickets           Tickets[]
}

model Tickets {
  ticketId           Int      @id @default(autoincrement())
  ticketNumber       String   @unique
  price              Decimal  
  scheduleID         Int
  schedule           MovieSchedules @relation(fields: [scheduleID], references: [scheduleId])
  userID             Int
  user               User     @relation(fields: [userID], references: [userId])
  stripe             Stripe    @relation(fields: [stripeID], references: [stripeId])
  stripeID           Int       @unique
}

model Stripe {
  stripeId           Int       @id @default(autoincrement())
  customerID         String    @unique
  paymentMethodID    String  @unique
  tickets            Tickets[]
}